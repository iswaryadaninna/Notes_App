<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notes App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            width: 90%;
            max-width: 600px;
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        #noteInput {
            width: 100%;
            height: 150px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-bottom: 20px;
            resize: none;
        }

        #addNoteBtn {
            width: 100%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 18px;
            cursor: pointer;
        }

        #addNoteBtn:hover {
            background-color: #45a049;
        }

        .notes-list {
            margin-top: 20px;
        }

        .note {
            background-color: #f9f9f9;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 8px;
            border: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .note button {
            background-color: red;
            color: white;
            border: none;
            border-radius: 50%;
            padding: 5px 10px;
            cursor: pointer;
        }

        .note button:hover {
            background-color: #d32f2f;
        }

        .note button.edit {
            background-color: orange;
        }

        .note button.edit:hover {
            background-color: #f57c00;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Notes App</h1>
        <textarea id="noteInput" placeholder="Write your note here..."></textarea>
        <button id="addNoteBtn">Add Note</button>

        <div id="notesList" class="notes-list">
            <!-- Notes will be dynamically added here -->
        </div>
    </div>

    <script>
        // Get elements
        const noteInput = document.getElementById('noteInput');
        const addNoteBtn = document.getElementById('addNoteBtn');
        const notesList = document.getElementById('notesList');

        // Load notes from localStorage
        let notes = JSON.parse(localStorage.getItem('notes')) || [];

        // Function to render notes
        function renderNotes() {
            notesList.innerHTML = ''; // Clear notes container
            notes.forEach((note, index) => {
                const noteElement = document.createElement('div');
                noteElement.classList.add('note');
                noteElement.innerHTML = `
                    <span>${note}</span>
                    <div>
                        <button class="edit" onclick="editNote(${index})">Edit</button>
                        <button onclick="deleteNote(${index})">Delete</button>
                    </div>
                `;
                notesList.appendChild(noteElement);
            });
        }

        // Function to add a note
        addNoteBtn.addEventListener('click', () => {
            const noteText = noteInput.value.trim();
            if (noteText !== '') {
                notes.push(noteText);
                noteInput.value = ''; // Clear input field
                saveNotes();
                renderNotes();
            }
        });

        // Function to delete a note
        function deleteNote(index) {
            notes.splice(index, 1);
            saveNotes();
            renderNotes();
        }

        // Function to edit a note
        function editNote(index) {
            const newNoteText = prompt('Edit your note:', notes[index]);
            if (newNoteText !== null && newNoteText.trim() !== '') {
                notes[index] = newNoteText.trim();
                saveNotes();
                renderNotes();
            }
        }

        // Function to save notes to localStorage
        function saveNotes() {
            localStorage.setItem('notes', JSON.stringify(notes));
        }

        // Initial render of notes
        renderNotes();
    </script>

</body>
</html>
